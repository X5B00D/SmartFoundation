# =============================================================================
# Task Master AI - API Keys Configuration Template
# =============================================================================
# Copy this file to .env and add your actual API keys
# 
# IMPORTANT: 
#   1. This file should contain ONLY API keys and sensitive endpoints
#   2. Never commit .env file to version control (already in .gitignore)
#   3. Non-secret settings like TASK_MASTER_TOOLS go in .vscode/mcp.json
# =============================================================================

# =============================================================================
# ⚠️  CONFIGURATION LOCATION GUIDE
# =============================================================================
# 
# API Keys (SENSITIVE) → .env file (this file)
#   - ANTHROPIC_API_KEY, OPENAI_API_KEY, etc.
#   - AZURE_OPENAI_ENDPOINT, custom base URLs
#
# Tool Loading (NON-SECRET) → .vscode/mcp.json
#   - TASK_MASTER_TOOLS="standard"
#   - Timeout settings
#
# Model Configuration → .taskmaster/config.json (created after init)
#   - Model selections (main, research, fallback)
#   - Model parameters (maxTokens, temperature)
#   - Global settings (logLevel, projectName)
#
# =============================================================================

# =============================================================================
# AI Provider API Keys
# =============================================================================
# You need AT LEAST ONE API key (unless using Claude Code or Codex CLI)
# Remove or leave empty the keys you don't use
# =============================================================================

# -----------------------------------------------------------------------------
# Anthropic (Claude Models) - RECOMMENDED for main model
# -----------------------------------------------------------------------------
# Get your API key at: https://console.anthropic.com/
# Models: claude-3-opus, claude-3-sonnet, claude-3-haiku
ANTHROPIC_API_KEY=

# -----------------------------------------------------------------------------
# OpenAI (GPT Models)
# -----------------------------------------------------------------------------
# Get your API key at: https://platform.openai.com/api-keys
# Models: gpt-4, gpt-4-turbo, gpt-3.5-turbo
OPENAI_API_KEY=

# -----------------------------------------------------------------------------
# Google (Gemini Models)
# -----------------------------------------------------------------------------
# Get your API key at: https://makersuite.google.com/app/apikey
# Models: gemini-pro, gemini-pro-vision
GOOGLE_API_KEY=AIzaSyB-bX7tKf_H7RntFo3JBFMCaA2FScrCpec

# -----------------------------------------------------------------------------
# Perplexity - RECOMMENDED for research model
# -----------------------------------------------------------------------------
# Get your API key at: https://www.perplexity.ai/settings/api
# Features: Real-time web search, up-to-date information
PERPLEXITY_API_KEY=

# -----------------------------------------------------------------------------
# Mistral AI
# -----------------------------------------------------------------------------
# Get your API key at: https://console.mistral.ai/
# Models: mistral-small, mistral-medium, mistral-large
MISTRAL_API_KEY=

# -----------------------------------------------------------------------------
# Groq (Fast Inference)
# -----------------------------------------------------------------------------
# Get your API key at: https://console.groq.com/
# Features: Extremely fast inference speeds
GROQ_API_KEY=

# -----------------------------------------------------------------------------
# OpenRouter (Access to Multiple Models)
# -----------------------------------------------------------------------------
# Get your API key at: https://openrouter.ai/keys
# Features: Single API for many different models
OPENROUTER_API_KEY=

# -----------------------------------------------------------------------------
# xAI (Grok Models)
# -----------------------------------------------------------------------------
# Get your API key at: https://x.ai/
# Models: grok-1, grok-2
XAI_API_KEY=

# -----------------------------------------------------------------------------
# Azure OpenAI
# -----------------------------------------------------------------------------
# Get your credentials from Azure Portal
AZURE_OPENAI_API_KEY=

# -----------------------------------------------------------------------------
# Ollama (Local Models)
# -----------------------------------------------------------------------------
# For running models locally
# No API key needed if running locally
OLLAMA_API_KEY=

# =============================================================================
# Configuration Examples
# =============================================================================
#
# Basic Setup (Only Google):
#   .env file:
#     GOOGLE_API_KEY=your-actual-key-here
#   
#   .vscode/mcp.json:
#     "TASK_MASTER_TOOLS": "standard"
#
# Recommended Setup (Anthropic + Perplexity):
#   .env file:
#     ANTHROPIC_API_KEY=your-anthropic-key
#     PERPLEXITY_API_KEY=your-perplexity-key
#
#   .vscode/mcp.json:
#     "TASK_MASTER_TOOLS": "standard"
#
#   Then run: task-master models --setup
#
# Minimal Setup (Core tools only):
#   .env file:
#     OPENAI_API_KEY=your-openai-key
#
#   .vscode/mcp.json:
#     "TASK_MASTER_TOOLS": "core"
#
# =============================================================================
# Notes & Best Practices
# =============================================================================
#
# 1. API Key Security:
#    - Never commit .env file to version control (already in .gitignore)
#    - Use separate keys for development/production
#    - Rotate keys regularly
#    - Set spending limits on API keys
#
# 2. Model Selection (after initialization):
#    - Run: task-master models --setup (interactive)
#    - Or: task-master models --set-main=claude-3-7-sonnet-20250219
#    - Configuration stored in .taskmaster/config.json
#    - Use Anthropic (Claude) for best code generation
#    - Use Perplexity for research (real-time web data)
#
# 3. Tool Loading (in .vscode/mcp.json, NOT here):
#    - Set TASK_MASTER_TOOLS in mcp.json env block
#    - Options: "standard" (recommended), "core", "all", or custom list
#    - See .vscode/mcp-setup.md for details
#
# 4. After Adding Keys:
#    - Restart VS Code to reload configuration
#    - Check MCP server status in Extensions view
#    - Run: task-master models --setup to configure models
#    - View logs if server fails to start
#
# 5. Configuration Workflow:
#    Step 1: Add API keys to this .env file
#    Step 2: Restart VS Code
#    Step 3: Run: Initialize taskmaster-ai in my project (in Chat)
#    Step 4: Run: task-master models --setup (configure models)
#    Step 5: Start using Task Master AI
#
# =============================================================================
