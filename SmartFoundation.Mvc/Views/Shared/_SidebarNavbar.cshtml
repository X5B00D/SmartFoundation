@using System.Text.Json
@using Microsoft.AspNetCore.Html
@using System.Linq
@using System.Text
@using System.Text.Encodings.Web
@using SmartFoundation.Mvc.Models
@model List<MenuItem>

<!-- ================================
     ✅ NAVBAR WITH FULL DARK MODE
     ================================ -->
<nav class="fixed z-50 w-full bg-white border-b border-gray-200 dark:bg-gray-800 dark:border-gray-700">
  <div class="px-3 py-3 lg:px-5 lg:pe-3">
    <div class="flex items-center justify-between">

      <!-- Left section: Logo + Search -->
      <div class="flex items-center justify-start">

        <!-- Mobile menu toggle -->
        <button data-drawer-target="logo-sidebar" data-drawer-toggle="logo-sidebar" aria-controls="logo-sidebar" type="button"
                class="inline-flex items-center p-2 text-gray-600 rounded-lg lg:hidden hover:text-gray-900 hover:bg-gray-100 focus:bg-gray-100 dark:focus:bg-gray-700 focus:ring-2 focus:ring-gray-100 dark:focus:ring-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white">
          <span class="sr-only">Open sidebar</span>
          <svg class="w-6 h-6" fill="currentColor" viewBox="0 0 20 20"><path fill-rule="evenodd"
                d="M3 5a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 10a1 1 0 011-1h6a1 1 0 110 2H4a1 1 0 01-1-1zM3 15a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z"
                clip-rule="evenodd"></path></svg>
        </button>

        <!-- Logo -->
        <a href="/" class="flex items-center ms-2 md:me-24">
          <img src="../img/ppng.png" class="h-8 me-3" alt="KFMC Logo" />
          <span class="self-center text-xl font-semibold text-gray-900 sm:text-2xl whitespace-nowrap dark:text-white">KFMC</span>
        </a>

        <!-- Search form -->
        <form action="#" method="GET" class="hidden md:block lg:ps-3.5">
          <label for="topbar-search" class="sr-only">بحث</label>
          <div class="relative mt-1 lg:w-96">
            <div class="absolute inset-y-0 right-0 flex items-center pointer-events-none pe-3">
              <svg class="w-5 h-5 text-gray-500 dark:text-gray-400" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 
                  1.414l-4.816-4.816A6 6 0 012 8z" clip-rule="evenodd"></path>
              </svg>
            </div>
            <input type="text" name="search" id="topbar-search"
                   class="bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg 
                          focus:ring-primary-500 focus:border-primary-500 block w-full pe-10 p-2.5 
                          dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white 
                          dark:focus:ring-primary-500 dark:focus:border-primary-500"
                   placeholder="بحث">
          </div>
        </form>
      </div>

      <!-- Right section: icons, theme, user -->
      <div class="flex items-center space-x-2 rtl:space-x-reverse">

        <!-- Notifications -->
        <button type="button" data-dropdown-toggle="notification-dropdown"
                class="p-2 text-gray-500 rounded-lg hover:text-gray-900 hover:bg-gray-100 dark:text-gray-400 dark:hover:text-white dark:hover:bg-gray-700">
          <span class="sr-only">عرض الإشعارات</span>
          <svg class="w-6 h-6" fill="currentColor" viewBox="0 0 20 20">
            <path d="M10 2a6 6 0 00-6 6v3.586l-.707.707A1 1 0 004 14h12a1 1 0 00.707-1.707L16 
              11.586V8a6 6 0 00-6-6zM10 18a3 3 0 01-3-3h6a3 3 0 01-3 3z"></path>
          </svg>
        </button>

        <!-- Notification dropdown -->
        <div id="notification-dropdown"
             class="z-50 hidden max-w-sm my-4 overflow-hidden text-base list-none bg-white divide-y divide-gray-100 rounded shadow-lg dark:bg-gray-800 dark:divide-gray-700">
          <div class="block px-4 py-2 text-base font-medium text-center text-gray-700 bg-gray-50 dark:bg-gray-700 dark:text-gray-300">
            الإشعارات
          </div>
          <div>
            <a href="#" class="flex px-4 py-3 border-b hover:bg-gray-100 dark:hover:bg-gray-600 dark:border-gray-700">
              <div class="w-full">
                <div class="text-gray-600 text-sm mb-1.5 dark:text-gray-300">رسالة جديدة من المستخدم</div>
                <div class="text-xs font-medium text-primary-700 dark:text-primary-400">قبل دقائق</div>
              </div>
            </a>
          </div>
          <a href="#" class="block py-2 text-base font-normal text-center text-gray-900 bg-gray-50 hover:bg-gray-100 dark:bg-gray-700 dark:text-white dark:hover:underline">
            <div class="inline-flex items-center">
              <svg class="w-5 h-5 me-2" fill="currentColor" viewBox="0 0 20 20">
                <path d="M10 12a2 2 0 100-4 2 2 0 000 4z"></path>
                <path fill-rule="evenodd"
                      d="M.458 10C1.732 5.943 5.522 3 10 3s8.268 2.943 9.542 7c-1.274 
                      4.057-5.064 7-9.542 7S1.732 14.057.458 10zM14 10a4 4 0 11-8 
                      0 4 4 0 018 0z"
                      clip-rule="evenodd"></path>
              </svg>
              عرض الكل
            </div>
          </a>
        </div>

        <!-- Theme toggle -->
        <button id="theme-toggle" type="button"
                class="p-2.5 text-gray-500 rounded-lg hover:text-gray-900 hover:bg-gray-100 
                       focus:outline-none focus:ring-4 focus:ring-gray-200 
                       dark:text-gray-400 dark:hover:bg-gray-700 dark:focus:ring-gray-700 
                       dark:hover:text-white">
          <svg id="theme-toggle-dark-icon" class="hidden w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
            <path d="M17.293 13.293A8 8 0 016.707 
              2.707a8.001 8.001 0 1010.586 10.586z"></path>
          </svg>
          <svg id="theme-toggle-light-icon" class="hidden w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
            <path d="M10 2a1 1 0 011 1v1a1 1 0 11-2 
              0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 
              0 018 0zm-.464 4.95l.707.707a1 1 0 
              001.414-1.414l-.707-.707a1 1 0 
              00-1.414 1.414zm2.12-10.607a1 1 0 
              010 1.414l-.706.707a1 1 0 
              11-1.414-1.414l.707-.707a1 1 0 
              011.414 0zM17 11a1 1 0 100-2h-1a1 1 
              0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 
              0 11-2 0v-1a1 1 0 011-1z"></path>
          </svg>
        </button>

        <!-- User Menu -->
        <div class="flex items-center ms-3">
          <button type="button" class="flex text-sm bg-gray-800 rounded-full focus:ring-4 focus:ring-gray-300 dark:focus:ring-gray-600" id="user-menu-button" aria-expanded="false" data-dropdown-toggle="user-dropdown">
            <span class="sr-only">فتح قائمة المستخدم</span>
            <img class="w-8 h-8 rounded-full" src="https://flowbite.com/docs/images/people/profile-picture-5.jpg" alt="user photo">
          </button>
          <div id="user-dropdown"
               class="z-50 hidden my-4 text-base list-none bg-white divide-y divide-gray-100 rounded shadow dark:bg-gray-800 dark:divide-gray-700">
            <div class="px-4 py-3">
              <p class="text-sm text-gray-900 dark:text-white">المستخدم</p>
              <p class="text-sm font-medium text-gray-900 truncate dark:text-gray-300">
                user@smartfoundation.com
              </p>
            </div>
            <ul class="py-1">
              <li><a href="#" class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 dark:text-gray-300 dark:hover:bg-gray-600 dark:hover:text-white">لوحة التحكم</a></li>
              <li><a href="#" class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 dark:text-gray-300 dark:hover:bg-gray-600 dark:hover:text-white">الإعدادات</a></li>
              <li><a href="#" class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 dark:text-gray-300 dark:hover:bg-gray-600 dark:hover:text-white">تسجيل الخروج</a></li>
            </ul>
          </div>
        </div>
      </div>
    </div>
  </div>
</nav>

<!-- ================================
     ✅ SIDEBAR (unchanged, full dark)
     ================================ -->
<aside id="logo-sidebar"
       class="fixed top-0 right-0 z-40 w-64 h-screen pt-16 transition-transform translate-x-full bg-white border-l border-gray-200 sm:translate-x-0 dark:bg-gray-800 dark:border-gray-700"
       aria-label="Sidebar">
  <div class="relative flex flex-col flex-1 h-full min-h-0 pt-0 bg-white dark:bg-gray-800">
    <div class="flex flex-col flex-1 pt-5 pb-4 overflow-y-auto" style="scrollbar-width:none;-ms-overflow-style:none;">
      <style>#logo-sidebar .overflow-y-auto::-webkit-scrollbar{display:none;}</style>
      <div class="flex-1 px-3 space-y-1 bg-white divide-y divide-gray-200 dark:bg-gray-800 dark:divide-gray-700">
        <ul class="pb-2 space-y-2"><li id="menu-container"></li></ul>
      </div>
    </div>
  </div>
</aside>



<script>
  // ================================================================
  // 🔹 Multi-Level Menu Renderer for Flowbite Sidebar
  // ================================================================

  // ✅ Serialize backend menu data
  const menuData = @Html.Raw(JsonSerializer.Serialize(
      Model ?? new List<MenuItem>(),
      new JsonSerializerOptions { Encoder = JavaScriptEncoder.UnsafeRelaxedJsonEscaping }
  ));

  // ✅ Debug: Check JSON structure in console
  console.log("Menu data:", menuData);

  // ✅ Current page path for active link highlighting
  const currentPath = window.location.pathname.toLowerCase();

  // ------------------------------------------------------------
  // 🔹 Utility: Clean .aspx extension for pretty URLs
  // ------------------------------------------------------------
  function removeAspxExtension(link) {
    if (!link || link.trim() === '') return '#';
    return link.toLowerCase().endsWith('.aspx') ? link.substring(0, link.length - 5) : link;
  }

  // ------------------------------------------------------------
  // 🔹 Utility: Escape HTML to prevent XSS
  // ------------------------------------------------------------
  function escapeHtml(text) {
    const div = document.createElement('div');
    div.textContent = text;
    return div.innerHTML;
  }

  // ------------------------------------------------------------
  // 🔹 Get child menu items by parent ID
  // ------------------------------------------------------------
function getChildMenuItems(allItems, parentId) {
  return allItems
    .filter(item => {
      if (parentId === null) {
        // Top-level (Level 1)
        return item.Levels === 1;
      }
      // Level 2 or deeper (Level 3, etc.)
      return item.Parents === parentId;
    })
    .sort((a, b) => (a.MPSerial || 0) - (b.MPSerial || 0));
}

  // ------------------------------------------------------------
  // 🔹 Build a single menu item (recursively)
  // ------------------------------------------------------------
 function buildMenuItem(item, allItems, level) { 
  const paddingClass = level > 1 ? ' ps-10' : '';
  const baseClasses = 'flex items-center w-full p-2 text-gray-900 rounded-lg transition duration-75 group hover:bg-gray-100 dark:text-gray-200 dark:hover:bg-gray-700';
  const linkClasses = level === 1 ? baseClasses : `${baseClasses}${paddingClass}`;

  const menuName = escapeHtml(item.MenuName_A || '');
  const itemLink = removeAspxExtension(item.MPLink);
  const isActive = currentPath === itemLink.toLowerCase();
  const activeClass = isActive ? ' bg-gray-100 dark:bg-gray-700' : '';

  const iconHtml = item.MPIcon && item.MPIcon.trim() !== ''
    ? `<i class="${escapeHtml(item.MPIcon)} w-5 h-5 me-3 text-gray-500 group-hover:text-gray-900 dark:text-gray-400 dark:group-hover:text-white"></i>`
    : '';

  // ✅ Get child items using only "Parents" column logic
  const childItems = getChildMenuItems(allItems, item.MPID);
  const hasChildren = childItems.length > 0; // ✅ fixed variable name

  let html = '';

  if (hasChildren) {
    const collapseId = `dropdown-${item.MPID}`;
    html += `
      <button type="button"
              class="${linkClasses}${activeClass}"
              data-collapse-toggle="${collapseId}"
              aria-controls="${collapseId}">
        ${iconHtml}
        <span class="flex-1 text-right whitespace-nowrap">${menuName}</span>
        <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
          <path fill-rule="evenodd"
                d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z"
                clip-rule="evenodd"></path>
        </svg>
      </button>
      <ul id="${collapseId}" class="hidden py-2 space-y-2">
    `;
    // ✅ Use correct variable name
    childItems.forEach(child => {
      html += `<li>${buildMenuItem(child, allItems, level + 1)}</li>`;
    });
    html += `</ul>`;
  } else {
    html += `
      <a href="${escapeHtml(itemLink)}" class="${linkClasses}${activeClass}">
        ${iconHtml}
        <span class="flex-1 whitespace-nowrap">${menuName}</span>
      </a>
    `;
  }

  return html;
}


function removeDuplicateMenuItems(items) {
  const seen = new Set();
  return items.filter(item => {
    if (seen.has(item.MPID)) return false;
    seen.add(item.MPID);
    return true;
  });
}

// ------------------------------------------------------------
// 🔹 Build all menu items starting from level 1
// ------------------------------------------------------------
function buildMenuItems(items, level) {
  // ✅ Level 1 items are those with Levels === 1
  const rootItems = level === 1 ? getChildMenuItems(items, null) : items;
  let html = '';
  rootItems.forEach(item => {
    html += `<li>${buildMenuItem(item, items, level)}</li>`;
  });
  return html;
}


  // ------------------------------------------------------------
  // 🔹 Initialize menu when DOM ready
  // ------------------------------------------------------------
  document.addEventListener('DOMContentLoaded', () => {
    const container = document.getElementById('menu-container');
   if (container && Array.isArray(menuData)) {
  // ✅ Remove duplicates first
  const uniqueMenuData = removeDuplicateMenuItems(menuData);
  container.outerHTML = buildMenuItems(uniqueMenuData, 1);
} else {
      console.error("Menu container not found or menuData invalid");
    }
  });
</script>